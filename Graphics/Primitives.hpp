#pragma once
#include <glm/glm.hpp>
#include <vector>

namespace primitive
{
	const std::vector<glm::dvec3> RegelarOctohedron{
		{  0.0,  1.0,  0.0 },
		{ -1.0,  0.0,  0.0 },
		{  0.0, -1.0,  0.0 },
		{  1.0,  0.0,  0.0 },
		{  0.0,  1.0,  0.0 },
		{  0.0,  0.0,  1.0 },
		{  0.0, -1.0,  0.0 },
		{  0.0,  0.0, -1.0 },
		{ -1.0,  0.0,  0.0 },
		{  0.0,  0.0,  1.0 },
		{  1.0,  0.0,  0.0 },
		{  0.0,  0.0, -1.0 }
	};
	const std::vector<glm::dvec3> axes{
		{  0.0,  0.0,  0.0 },
		{  1.0,  0.0,  0.0 },
		{  0.0,  0.0,  0.0 },
		{  0.0,  1.0,  0.0 },
		{  0.0,  0.0,  0.0 },
		{  0.0,  0.0,  1.0 },
		{  0.0,  0.0,  0.0 }
	};
	const std::vector<glm::dvec3> Square{
		{ -1.0, -1.0, 0.0 },
		{ -1.0,  1.0, 0.0 },
		{  1.0,  1.0, 0.0 },
		{  1.0, -1.0, 0.0 },
	};
	const std::vector<glm::dvec3> Triangle{
		{ -0.1, -0.1, 0.0 },
		{  0.0,  0.1, 0.0 },
		{  0.1, -0.1, 0.0 },
	};

	const std::vector<glm::dvec3> cubeVertex =
	{
		{ -1.0f, -1.0f, -1.0f }, // (0)
		{ -1.0f, -1.0f, 1.0f }, // (1)
		{ -1.0f, 1.0f, 1.0f }, // (2)
		{ -1.0f, 1.0f, -1.0f }, // (3)
		{ 1.0f, 1.0f, -1.0f }, // (4)
		{ 1.0f, -1.0f, -1.0f }, // (5)
		{ 1.0f, -1.0f, 1.0f }, // (6)
		{ 1.0f, 1.0f, 1.0f } // (7)
	};
	// 六面体の稜線の両端点のインデックス
	const std::vector<GLuint> cubeIndex =
	{
		1, 0, // (a)
		2, 7, // (b)
		3, 0, // (c)
		4, 7, // (d)
		5, 0, // (e)
		6, 7, // (f)
		1, 2, // (g)
		2, 3, // (h)
		3, 4, // (i)
		4, 5, // (j)
		5, 6, // (k)
		6, 1
	};
}