#pragma once
#include <glm/glm.hpp>
#include <vector>

namespace primitive
{
	const std::vector<glm::dvec3> RegelarOctohedron{
		{  0.0,  1.0,  0.0 },
		{ -1.0,  0.0,  0.0 },
		{  0.0, -1.0,  0.0 },
		{  1.0,  0.0,  0.0 },
		{  0.0,  1.0,  0.0 },
		{  0.0,  0.0,  1.0 },
		{  0.0, -1.0,  0.0 },
		{  0.0,  0.0, -1.0 },
		{ -1.0,  0.0,  0.0 },
		{  0.0,  0.0,  1.0 },
		{  1.0,  0.0,  0.0 },
		{  0.0,  0.0, -1.0 }
	};
	const std::vector<glm::dvec3> axes{
		{  0.0,  0.0,  0.0 },
		{  1.0,  0.0,  0.0 },
		{  0.0,  0.0,  0.0 },
		{  0.0,  1.0,  0.0 },
		{  0.0,  0.0,  0.0 },
		{  0.0,  0.0,  1.0 },
		{  0.0,  0.0,  0.0 }
	};
	const std::vector<glm::dvec3> Square{
		{ -1.0, -1.0, 0.0 },
		{ -1.0,  1.0, 0.0 },
		{  1.0,  1.0, 0.0 },
		{  1.0, -1.0, 0.0 },
	};
	const std::vector<glm::dvec3> Triangle{
		{ -0.1, -0.1, 0.0 },
		{  0.0,  0.1, 0.0 },
		{  0.1, -0.1, 0.0 },
	};

	const std::vector<glm::dvec3> cubeVertex =
	{
		{	-1.0,	-1.0,	-1.0},
		{	-1.0,	-1.0,	1.0},
		{	-1.0,	1.0,	1.0},
		{	-1.0,	1.0,	-1.0},
		{	1.0,	1.0,	-1.0},
		{	1.0,	-1.0,	-1.0},
		{	1.0,	-1.0,	1.0},
		{	1.0,	1.0,	1.0}
	};
	const std::vector<GLuint> cubeIndex =
	{
		1, 0,
		2, 7,
		3, 0,
		4, 7,
		5, 0,
		6, 7,
		1, 2,
		2, 3,
		3, 4,
		4, 5,
		5, 6,
		6, 1
	};
	const std::vector<GLuint> solidCubeIndex =
	{
		1, 6, 7,
		7, 2, 1,
		4, 7, 6,
		6, 5, 4,
		5, 6, 1,
		1, 0, 5,
		0, 1, 2,
		2, 3, 0,
		4, 5, 0,
		0, 3, 4,
		3, 2, 7,
		7, 4, 3,
	};
	const std::vector<glm::dvec3> cubeVertexColor =
	{
		{	0.0,	0.0,	0.0},
		{	0.0,	0.0,	0.8},
		{	0.0,	0.8,	0.0},
		{	0.0,	0.8,	0.8},
		{	0.8,	0.0,	0.0},
		{	0.8,	0.0,	0.8},
		{	0.8,	0.8,	0.0},
		{	0.8,	0.8,	0.8}
	};
}